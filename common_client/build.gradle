plugins {
    id 'java'
    id 'common-loom' version "${common_loom_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version as int)
sourceCompatibility = JavaLanguageVersion.of(java_version as int)
targetCompatibility = JavaLanguageVersion.of(java_version as int)

repositories {
    mavenCentral()
    maven { url = 'https://maven.maxhenkel.de/repository/public' }
    mavenLocal()
    maven {
        url = "https://maven.bluspring.xyz/"
    }
    maven { url = "https://mcphackers.github.io/libraries/" }
}

task prepareWorkspace {

}

loom {
    customManifest.set(custom_manifest_url)
    clientOnlyMinecraftJar()
    intermediaryUrl = "https://github.com/BluSpring/maven-repo/raw/main/xyz/bluspring/intermediary/empty/intermediary-empty.jar"

    accessWidenerPath = file("src/main/resources/voicechat_client.accesswidener")
}

sourceSets {
    template {
        java {
            srcDir 'src/template/java'
        }
    }
    main {
        compileClasspath += sourceSets.template.output
        runtimeClasspath += sourceSets.template.output
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "org.mcphackers:retromcp:${minecraft_version}-client"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
    implementation "de.maxhenkel.opus4j:opus4j:${opus4j_version}"
    implementation "org.concentus:Concentus:${concentus_version}"
    implementation "de.maxhenkel.rnnoise4j:rnnoise4j:${rnnoise4j_version}"
    implementation "de.maxhenkel.lame4j:lame4j:${lame4j_version}"

    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation("com.google.guava:guava:31.1-jre")
    implementation('com.google.code.gson:gson:2.10.1')
    implementation 'commons-io:commons-io:2.12.0'


    implementation project(':api')
}